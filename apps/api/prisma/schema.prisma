// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  password  String
  name      String
  role      String // "candidate" | "interviewer"
  sessions  Session[]
  createdAt DateTime  @default(now())

  interviewerSessions Session[] @relation("InterviewerSessions")
  candidateSessions   Session[] @relation("CandidateSessions")

  Message Message[]

  Submission Submission[]
}

model Session {
  id            String       @id @default(cuid())
  roomCode      String       @unique
  interviewer   User         @relation("InterviewerSessions", fields: [interviewerId], references: [id])
  interviewerId String
  candidate     User?        @relation("CandidateSessions", fields: [candidateId], references: [id])
  candidateId   String?
  problem       Problem?     @relation(fields: [problemId], references: [id])
  problemId     String?
  messages      Message[]
  submissions   Submission[]
  createdAt     DateTime     @default(now())

  User User[]
}

model Problem {
  id        String    @id @default(cuid())
  title     String
  statement String
  examples  String // JSON string with examples
  solution  String? // reference solution (optional)
  sessions  Session[]
}

model Message {
  id        String   @id @default(cuid())
  session   Session  @relation(fields: [sessionId], references: [id])
  sessionId String
  sender    User     @relation(fields: [senderId], references: [id])
  senderId  String
  content   String
  createdAt DateTime @default(now())
}

model Submission {
  id        String   @id @default(cuid())
  session   Session  @relation(fields: [sessionId], references: [id])
  sessionId String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  code      String
  language  String
  status    String // "pending" | "accepted" | "wrong" | "error"
  createdAt DateTime @default(now())
}
